	call main
	ret
main:
	push ebp
	mov ebp, esp
	sub esp, 12
	push 1105723392
	pop [ebp + -4]
	push 1105723392
	pop [ebp + -8]
	push 1101004800
	pop [ebp + -12]
	push [ebp + -12]
	push [ebp + -8]
	push [ebp + -4]
	call draw_circle
	add esp, 12
	mov esp, ebp
	pop ebp
	ret
draw_circle:
	push ebp
	mov ebp, esp
	sub esp, 8
	push 0
	pop [ebp + -4]
l_while_cond_0:
	push [ebp + -4]
	push [ebp + 12]
	push [ebp + 16]
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	fsubp
	fstp [eax + 4]
	add esp, 4
	mov eax, esp
	fld [eax]
	fld [eax + 4]
	add esp, 8
	fcompp
	jae l_less_false_1
	push 1
	jmp l_less_end_1
l_less_false_1:
	push 0
l_less_end_1:
	pop eax
	cmp 1, eax
	jne l_while_end_0
	push 1065353216
	mov eax, esp
	fld [eax]
	fchs
	fstp [eax]
	push 1065353216
	mov eax, esp
	fld [eax]
	fchs
	fstp [eax]
	call draw_row
	add esp, 8
	push [ebp + -4]
	push 1065353216
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	faddp
	fstp [eax + 4]
	add esp, 4
	pop [ebp + -4]
	jmp l_while_cond_0
l_while_end_0:
l_while_cond_2:
	push [ebp + -4]
	push [ebp + 12]
	push [ebp + 16]
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	faddp
	fstp [eax + 4]
	add esp, 4
	mov eax, esp
	fld [eax]
	fld [eax + 4]
	add esp, 8
	fcompp
	ja l_less_equal_false_3
	push 1
	jmp l_less_equal_end_3
l_less_equal_false_3:
	push 0
l_less_equal_end_3:
	pop eax
	cmp 1, eax
	jne l_while_end_2
	push [ebp + 16]
	push [ebp + 12]
	push [ebp + -4]
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	fsubp
	fstp [eax + 4]
	add esp, 4
	call calc_x
	add esp, 8
	push eax
	pop [ebp + -8]
	push [ebp + 8]
	push [ebp + -8]
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	faddp
	fstp [eax + 4]
	add esp, 4
	push [ebp + 8]
	push [ebp + -8]
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	fsubp
	fstp [eax + 4]
	add esp, 4
	call draw_row
	add esp, 8
	push [ebp + -4]
	push 1065353216
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	faddp
	fstp [eax + 4]
	add esp, 4
	pop [ebp + -4]
	jmp l_while_cond_2
l_while_end_2:
l_while_cond_4:
	push [ebp + -4]
	push 1114636288
	mov eax, esp
	fld [eax]
	fld [eax + 4]
	add esp, 8
	fcompp
	jae l_less_false_5
	push 1
	jmp l_less_end_5
l_less_false_5:
	push 0
l_less_end_5:
	pop eax
	cmp 1, eax
	jne l_while_end_4
	push 1065353216
	mov eax, esp
	fld [eax]
	fchs
	fstp [eax]
	push 1065353216
	mov eax, esp
	fld [eax]
	fchs
	fstp [eax]
	call draw_row
	add esp, 8
	push [ebp + -4]
	push 1065353216
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	faddp
	fstp [eax + 4]
	add esp, 4
	pop [ebp + -4]
	jmp l_while_cond_4
l_while_end_4:
	mov esp, ebp
	pop ebp
	ret
calc_x:
	push ebp
	mov ebp, esp
	sub esp, 0
	push [ebp + 12]
	push [ebp + 12]
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	fmulp
	fstp [eax + 4]
	add esp, 4
	push [ebp + 8]
	push [ebp + 8]
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	fmulp
	fstp [eax + 4]
	add esp, 4
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	fsubp
	fstp [eax + 4]
	add esp, 4
	call sqrtf
	mov eax, esp
	fstp [eax]
	pop eax
	push eax
	pop eax
	mov esp, ebp
	pop ebp
	ret
	mov esp, ebp
	pop ebp
	ret
draw_row:
	push ebp
	mov ebp, esp
	sub esp, 4
	push 0
	pop [ebp + -4]
l_while_cond_6:
	push [ebp + -4]
	push [ebp + 8]
	mov eax, esp
	fld [eax]
	fld [eax + 4]
	add esp, 8
	fcompp
	jae l_less_false_7
	push 1
	jmp l_less_end_7
l_less_false_7:
	push 0
l_less_end_7:
	pop eax
	cmp 1, eax
	jne l_while_end_6
	push 32
	call putchar
	add esp, 4
	push [ebp + -4]
	push 1065353216
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	faddp
	fstp [eax + 4]
	add esp, 4
	pop [ebp + -4]
	jmp l_while_cond_6
l_while_end_6:
l_while_cond_8:
	push [ebp + -4]
	push [ebp + 12]
	mov eax, esp
	fld [eax]
	fld [eax + 4]
	add esp, 8
	fcompp
	ja l_less_equal_false_9
	push 1
	jmp l_less_equal_end_9
l_less_equal_false_9:
	push 0
l_less_equal_end_9:
	pop eax
	cmp 1, eax
	jne l_while_end_8
	push 42
	call putchar
	add esp, 4
	push [ebp + -4]
	push 1065353216
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	faddp
	fstp [eax + 4]
	add esp, 4
	pop [ebp + -4]
	jmp l_while_cond_8
l_while_end_8:
l_while_cond_10:
	push [ebp + -4]
	push 1114636288
	mov eax, esp
	fld [eax]
	fld [eax + 4]
	add esp, 8
	fcompp
	jae l_less_false_11
	push 1
	jmp l_less_end_11
l_less_false_11:
	push 0
l_less_end_11:
	pop eax
	cmp 1, eax
	jne l_while_end_10
	push 32
	call putchar
	add esp, 4
	push [ebp + -4]
	push 1065353216
	mov eax, esp
	fld [eax + 4]
	fld [eax]
	faddp
	fstp [eax + 4]
	add esp, 4
	pop [ebp + -4]
	jmp l_while_cond_10
l_while_end_10:
	mov esp, ebp
	pop ebp
	ret
