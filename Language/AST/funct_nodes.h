///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***///
// Модуль абстрактного синтаксического дерева АСД (AST).
// 
// Функции поддержки функциональной парадигмы языка.
//  
// Версия: 1.0.1.0
// Дата последнего изменения: 16:49 30.01.2023
// 
// Автор: Маслов А.С. (https://github.com/ArtemMaslov).
///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***///

#ifndef FUNCT_NODE_H
#define FUNCT_NODE_H

///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***///
///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***///

/**
 * @brief Узел параметра функции.
 * 
 * Использование:
 * 1. Описание параметров функции при её определении. Value == nullptr.
 * 2. Передача параметров при вызове функции. Value != nullptr.
*/
struct FunctParamNode
{
	/// Идентификатор параметра.
	size_t NameId;
	/// Значение параметра.
	ExpressionNode* Value;
};

/// Узел определения функции.
struct FunctDefNode
{
	/// Идентификатор функции.
	size_t NameId;

	/**
	 * @brief Массив параметров функции.
	 * ExtArray<FunctParamNode>
	*/
	ExtArray Params;

	/**
	 * @brief Массив инструкций функции.
	 * ExtArray<InstructionNode>
	*/
	ExtArray Body;
};

/// Узел вызова функции.
struct FunctCallNode
{
	/// Идентификатор функции.
	size_t NameId;

	/**
	 * @brief Массив аргументов функции.
	 * ExtArray<FunctParamNode>
	*/
	ExtArray Params;
};

///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***///
///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***///

/**
 * @brief  Создать узел определения функции.
 * 
 * @param ast    Указатель на АСД.
 * @param nameId Идентификатор функции.
 * 
 * @return nullptr, если не удалось выделить память.
 *         Указатель на созданный узел.
*/
FunctDefNode* AstCreateFunctDefNode(AST* const ast, const size_t nameId);

/**
 * @brief  Создать узел вызова функции.
 * 
 * @param ast    Указатель на АСД.
 * @param nameId Идентификатор функции.
 * 
 * @return nullptr, если не удалось выделить память.
 *         Указатель на созданный узел.
*/
FunctCallNode* AstCreateFunctCallNode(AST* const ast, const size_t nameId);

/**
 * @brief  Создать узел аргумента функции.
 * 
 * @param ast  Указатель на АСД.
 * @param expr Выражение, передаваемое в качестве аргумента функции.
 * 
 * @return nullptr, если не удалось выделить память.
 *         Указатель на созданный узел.
*/
FunctParamNode* AstCreateFunctParamNode(AST* const ast, ExpressionNode* const expr);

/**
 * @brief  Создать узел параметра функции.
 * 
 * @param ast    Указатель на АСД.
 * @param nameId Идентификатор параметра.
 * 
 * @return nullptr, если не удалось выделить память.
 *         Указатель на созданный узел.
*/
FunctParamNode* AstCreateFunctParamNode(AST* const ast, const size_t nameId);

///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***///
///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***///

#endif // !FUNCT_NODE_H