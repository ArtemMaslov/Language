-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------

Пометки:
	* Идентификатор это 'a'-'z', 'A'-'Z', '_'.

	* Отрицательные числа читаются как две лексемы: унарный оператор "-" и число "12345".
	
	* Регистры bx, cx зарезервированы под создание стека фреймов вызовов функций.
	
	* Функция возвращает значение черех ax. 
	
-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------

Оптимизация генерации кода для x86.
"x86 code generation optimization"
в 0.0.0.5
	
Сделано:
	+ Убраны дублирующие друг друга функции преобразования ассемблерной команды в машинный код.
	
	+ Добавлена общая функция преобразования команд в машинный код.
	
	+ Добавлен файл _asm_cmd_codes.inc, описывающий правила преобразования команд.
	
-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------
	
Изменение кодировки файлов с win1251 на utf-8. Компиляция в x86, нет вещественной арифметики.
".gitignore fix. Float arithmetic. x86 first prototype."
в 0.0.0.4
	
Сделано:
	+ Исправлена ошибка .gitignore. Игнорировалась папка Language/Back end/x86.
	
	+ Компиляция в x86.
	{
		+ float арифметика.
		
		+ Отлажены тестовые программы: квадратное уравнение, факториал (цикл и рекурсия), кружочек.
	}
	
-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------
	
Изменение кодировки файлов с win1251 на utf-8. Компиляция в x86, нет вещественной арифметики.
"Encoding changed. Compiler x86, started adding floating arithmetic"
в 0.0.0.3
	
Сделано:
	+ Изменена кодировка файлов с win1251 на utf-8.
	
	+ Компиляция в x86.
	{
		+ Промежуточное ассемблерное представление кода.
		
		+ Листинги компиляции. Только ассемблерный код *_cmd.lst. Ассемблерный код вместе с машинным *_code.lst.
		
		- float арифметика.
	}

-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------

Задание нарисовать кружочек в видео-памяти. Исправление ошибки лексического анализатора.
"circle task. lexer bug fix"
в 0.0.0.2
	
Сделано:
	+ SoftCpu Compiler. Добавлены intrinsic-функции:
	{
		+ set_ram
		
		+ get_ram
		
		+ dsp
		
		+ int
	}
	
	+ Lexer. 
	{
		+ Добавлена возможность писать '_' в идентификаторе.
		
		+ Исправлена ошибка из-за которой идентификаторы 'x123456' и 'x123' считались одинаковыми.
	}
	
	+ CHECK_STATUS. В некоторых файлах условие "if (status != ProgramStatus::Ok) return status;" заменено на "assert(status == ProgramStatus::Ok);".
	
	+ circle.lng - рисует кружочек в консоль.	
	
-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------

Первая работающая версия. Базовый функционал.
"First prototype"
в 0.0.0.1

Сделано:
	+ Лексический анализатор. Разбиение текста на лексемы. Идентификаторам (функции + переменные) присваивается уникальное числовое значение. Тесты.

	+ Синтаксический анализатор. Создание абстрактного синтаксического дерева. Тесты.
	
	+ Абстрактное синтаксическое дерево. Функции для его построения.
		
	+ Компилятор для программного процессора. Тестовые программы: квадратное уравнение, факториал (цикл), факториал (рекурсия). !Кружочек не работает!
	
	+ Реализованы возможности языка:
	{
		+ Создание переменных локальных внутри функции.
		
		+ Рекурсивный вызов функций. Функция может возвращать значение.
		
		+ Выполнение программы начинается с main().
		
		+ if () {} else {}.
		
		+ while () {}.
		
		+ in.
		
		+ out.
		
		+ Математические выражения: '+', '-', '*', '/', '()', '||', '&&', '!', '+,- унарный', '>', '<', '>=', '<=', '==', '!=', 'num', 'var', 'functCall'.
		
		+ ret.
	}
	
Пометки:
	* Отрицательные числа читаются как две лексемы: унарный оператор "-" и число "12345".
	
	* Регистры bx, cx зарезервированы под создание стека фреймов вызовов функций.
	
	* Функция возвращает значение черех ax. 

-----------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------